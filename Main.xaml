<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="668,3621" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="678,3556" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="CourseEmails" />
      <Variable x:TypeArguments="x:String" Default="RPA Dev, RPADeveloper@uipath.com" Name="Signature" />
      <Variable x:TypeArguments="x:String" Name="DiscountValue" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="noor1798026@gmail.com" DisplayName="Get Outlook Mail Messages for Course Invoices" Filter="[Subject] = 'Course Invoices'" GetAttachements="False" sap:VirtualizedContainerService.HintSize="636,32" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Inbox" MarkAsRead="False" Messages="[CourseEmails]" OnlyUnreadMessages="True" OrderByDate="NewestFirst" Top="30" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="636,103" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[CourseEmails.Count.ToString+&quot; Mail messages have been retrieved.&quot;]" />
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="636,2452" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[CourseEmails]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="RetrievedEmail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Save the attachments in a new/existing folder called 'Invoices'" sap:VirtualizedContainerService.HintSize="600,2317" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save Attachments" ExcludeInlineAttachments="False" FolderPath="Invoices\" sap:VirtualizedContainerService.HintSize="558,99" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" Message="[RetrievedEmail]" OverwriteExisting="False" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="558,2088" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[&quot;Invoices\&quot; + RetrievedEmail.Attachments.First.Name]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="524,1969" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Double" Name="ClientCode" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadCell Cell="E8" DisplayName="Read and store the client code under 'ClientCode'" sap:VirtualizedContainerService.HintSize="482,69" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Invoice">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:Double">[ClientCode]</OutArgument>
                      </ui:ExcelReadCell.Result>
                    </ui:ExcelReadCell>
                    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'chrome.exe ACME'" sap:VirtualizedContainerService.HintSize="482,993" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="2d31e3d4130b2bf19d16540b092560a9" Selector="&lt;html app='chrome.exe' title='ACME System 1 - Dashboard' /&gt;">
                      <ui:BrowserScope.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,837" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'A  https://acme-test.ui...'" sap:VirtualizedContainerService.HintSize="358,116" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="986775d5-2be2-402a-a4d0-cc4006d28725" InformativeScreenshot="94798a67b10a84187f14252812c4ce87" Selector="&lt;webctrl tag='H1' aaname='Welcome to First Automation!' innertext='Welcome to First Automation!' visibleinnertext='Welcome to First Automation!' /&gt;&lt;nav up='1' /&gt;&lt;webctrl aaname='Part 2' tag='A' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  vendor'" sap:VirtualizedContainerService.HintSize="358,144" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="[ClientCode.ToString]">
                              <ui:TypeInto.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7e4b0b20-3cb9-4fb4-a035-0f5a32bf7a5d" InformativeScreenshot="682d9be3506c9af96c50cd1d2cee4e66" Selector="&lt;webctrl class='instructions' parentid='second' tag='DIV' aaname='                 Insert the client code to generate the discount value according to the promotion.             ' innertext='                 Insert the client code to generate the discount value according to the promotion.             ' visibleinnertext='Insert the client code to generate the discount value according to the promotion.' /&gt;&lt;nav up='1' /&gt;&lt;webctrl id='vendor' tag='INPUT' type='email' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:TypeInto.Target>
                            </ui:TypeInto>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  submitButton'" sap:VirtualizedContainerService.HintSize="358,116" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b24fadb7-e892-4c1a-b30c-3c823d134e2a" InformativeScreenshot="033f016d71527e7f655753336c429f50" Selector="&lt;webctrl parentid='submitButton' tag='I' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'H2  discount'" sap:VirtualizedContainerService.HintSize="358,116" sap2010:WorkflowViewState.IdRef="GetValue_2">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8919d410-72d7-4ff5-b602-7a7fe473b890" InformativeScreenshot="bd3a5f63335a19d117d850468dbcc980" Selector="&lt;webctrl parentid='product-card' tag='H1' innertext='Discount' parentclass='product' visibleinnertext='Discount' /&gt;&lt;nav up='1' /&gt;&lt;webctrl id='discount' tag='H2' aaname='*' innertext='*' parentclass='product' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="x:String">[DiscountValue]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="358,95" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[DiscountValue]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:BrowserScope.Body>
                    </ui:BrowserScope>
                    <If sap2010:Annotation.AnnotationText="Check if the client code is eligible for a discount and then write the discount value in the corresponding invoice Excel sheet. Otherwise, add the value &quot;$0&quot; in the Invoice sheet cell." Condition="[DiscountValue.Contains(&quot;$&quot;)]" DisplayName="If Check if there is a discount value available" sap:VirtualizedContainerService.HintSize="482,600" sap2010:WorkflowViewState.IdRef="If_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,187" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelWriteCell Cell="E18" DisplayName="Write Cell to insert discount value" sap:VirtualizedContainerService.HintSize="358,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Invoice" Text="[DiscountValue]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,187" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelWriteCell Cell="E18" DisplayName="Write Cell - No discount available" sap:VirtualizedContainerService.HintSize="358,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Invoice" Text="0$" />
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:ExcelWriteCell Cell="A31" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="482,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Invoice" Text="[Signature]" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <umab:OutlookApplicationCard Account="&quot;noor1798026@gmail.com&quot;" AccountMismatchBehavior="UseDefaultEmailAccount" sap2010:Annotation.AnnotationText="Finally, uses the default Outlook email account to create a draft email using, write the message, and attach the newly processed invoice sheets. The 'To' field is automatically populated with the current Outlook email address in use" DisplayName="Use Desktop Outlook App" sap:VirtualizedContainerService.HintSize="636,759" sap2010:WorkflowViewState.IdRef="OutlookApplicationCard_4">
      <umab:OutlookApplicationCard.Body>
        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Outlook" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,506" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <umab:SendMailX Bcc="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Outlook]" Body="[&quot;Hello!&quot; + vbLf + vbLf + &quot;I have completed pocessing &quot; + CourseEmails.Count.ToString + &quot; emails.&quot; + vbLf + vbLf + &quot;Robot&quot;]" BodyType="Text" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,416" sap2010:WorkflowViewState.IdRef="SendMailX_4" Importance="Normal" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="Invoices Processed" To="[Outlook.SelectedAccount]" UseDocumentAsBody="False">
              <umab:SendMailX.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                  <InArgument x:TypeArguments="x:String">Invoices</InArgument>
                </scg:List>
              </umab:SendMailX.Files>
              <umab:SendMailX.HtmlBodyFromFile>
                <umabh:HtmlContentArgument FilePath="{x:Null}">
                  <umabh:HtmlContentArgument.RuntimeImages>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </umabh:HtmlContentArgument.RuntimeImages>
                  <umabh:HtmlContentArgument.ValueMappings>
                    <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                  </umabh:HtmlContentArgument.ValueMappings>
                </umabh:HtmlContentArgument>
              </umab:SendMailX.HtmlBodyFromFile>
            </umab:SendMailX>
          </Sequence>
        </ActivityAction>
      </umab:OutlookApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </umab:OutlookApplicationCard>
  </Sequence>
</Activity>